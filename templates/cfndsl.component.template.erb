<% for @require in component_requires %>
    require('<%= @require %>')
<% end %>
CloudFormation do

<% for @mapping in dsl.mappings %>
    Mapping('<%= @mapping %>', mappings['<%= @mapping %>'])
<% end %>

# render subcomponents
<% for @component in dsl.components %>
    CloudFormation_Stack('<%= @component.name.gsub('-','').gsub('_','') %>') do
    TemplateURL '<%= @component.distribution_url %>'
    Parameters ({
    <% for @param in @component.parameters %>
        '<%= @param.name %>' => <%= @param.cfndsl_value %>,
    <% end %>
    })
    end
<% end %>

<%= component_cfndsl %>

# render lambda functions
<% unless dsl.lambda_functions_keys.nil? %>
    <% for @key in dsl.lambda_functions_keys %>
        render_lambda_functions(self,
        <%= @key %>,
        lambda_metadata,
        {'bucket'=>'<%= dsl.distribution_bucket %>','prefix' => '<%= dsl.distribution_prefix %>', 'version'=>'<%= dsl.version %>'})
    <% end %>
<% end %>
# render parameters at the end, overriding any parameters defined in template itself
<% for @param in dsl.parameters.param_list %>
    Parameter('<%= @param.name %>') do
      Type '<%= @param.type %>'
      Default '<%= @param.default_value %>'
      <% unless @param.no_echo.nil? %>
      NoEcho <%= @param.no_echo.to_s %>
      <% end %>
    end
<% end %>

end
